 @{
        Layout  = "Header";
  }


@using CI_Platform.Entities.ViewModels 
@model PageList<MissionCard>

    <body onload="grid(); Pagination();">

        <!------------------------------------------------------------------ main container ------------------------------------------------------------------>

        <div class="container-fluid">
           

            <!------------------------------------------------Second Navbar------------------------------------>

                    @{

                     Html.RenderPartial("_SecondNavbar");
                   
                     }

            <!---------------------------------- Third-Row ---  filtering  ---------------------------------->

            <div class="container ">
                <div class="row ">
                    <div class="col-12">
                        <div class="col-12 selected-options d-flex" >
                            <ul class="list-unstyled"  >

                            </ul>
                            <button class="clear-all btn-sm btn-outline-secondary" >Clear All</button>
                        </div>
                    </div>
                </div>
            </div>

            <!---------------------------------- Fourth-Row  --- gird & view list icons  ---------------------------------->
            <div class="container mt-4 ">
                <div class="row d-flex ">
                    <div class="col-12 d-flex justify-content-between ">
                       
                        <div class="d-flex ms-auto">
                            <select id="sort" onchange="temp()" class="sortby me-3 my-auto ">
                                <option disabled selected>Sort By</option>
                                <option value="1">Newest</option>
                                <option value="2">Oldest</option>
                                <option value="3">Lower Available Seats</option>
                                <option value="4">Highest Available Seats</option>
                                <option value="5">Sort by my favourite</option>
                                <option value="6">Sort by my deadline</option>
                            </select>
                            <div class="my-auto grid gridlist" id="grd-btn">
                            </div>
                            <div class="my-auto ms-1 list gridlist"  id="lst-btn">
                            </div>
                        </div>

                    </div>
                </div>
            </div>

             <!---------------------------------- all mission in grid view & mission in list view  ---------------------------------->        

            <div class="container p-0" id="grid-list">          
                    @{

                     Html.RenderPartial("_FilterMissionPartial", Model);
                   
                     }
            </div>

            <!---------------------------------    open pop-pop screen when clicked on button  ---------------------------------->
                        <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                          <div class="modal-dialog modal-dialog-centered">
                            <div class="modal-content">
                               <div class="fs-5 fw-bold text-center" id="email_msg"></div> 
                              <div class="modal-header">                                 
                                <h5 class="modal-title" style="color:#F88634" id="exampleModalLabel">Recommend to a Co-Worker</h5>
                                <button type="button" class="closebox btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                              </div>
                              <div class="p-0 modal-body">
                                <div class="text-center" id="dropdown">
                                  
                                  <div id="checkedbox" style="height: 120px; overflow-y: scroll;">
                                      @foreach(var item in @ViewBag.user){

                                      <a class="dropdown-item">
                                         <b>@item.Text</b> <input type="checkbox" value="@item.Value">
                                      </a>
                                      }
                                      
                                  </div>
                                </div>
                              </div>
                              <div class="modal-footer" id="model-footer">
                                <button id="close-button-1" type="button" class="closebox orangeButton" data-bs-dismiss="modal">Close</button>
                              </div>
                            </div>
                          </div>
                        </div>
            <!------------------------------------------------------------------ pagination  ------------------------------------------------------------------>
            
            <div class="container d-flex justify-content-center">
                <div class="row">
                    <nav>
                        <ul class="pagination">
                            <li class="pagination_box" id="firstpage">&laquo;</li>
                            <li class="pagination_box" id="prevpage-btn" @*onclick="prevpage()"*@>&#60;</li>
                            <ul class="pagination" id="pagination">
                            </ul>
                            <li class="pagination_box" id="nextpage-btn" @*onclick="nextpage()"*@>&#62;</li>
                            <li class="pagination_box" id="lastpage">&raquo;</li>
                        </ul>
                    </nav>
                </div>
           </div>
            <br><br>

            <!-------------------------------------------------- privacy policy  --------------------------------------------------------->

                        @{

                            Html.RenderPartial("Footer");
                   
                         }

        </div>

       <script>

           function GetCityByCountry(){
               var checkedcntryvalues = [];
                var div1 = document.getElementById("cntry");
                var list = div1.getElementsByTagName("input");
                for (i = 0; i < list.length; i++) {
                    if (list[i].checked) {
                        checkedcntryvalues.push(list[i].value);
                    }
                }
                 var checkedvalues = [];
                var div = document.getElementById("zxc");
                var list = div.getElementsByTagName("input");
                for (i = 0; i < list.length; i++) {
                    if (list[i].checked) {
                        checkedvalues.push(list[i].value);
                    }
                }
              

                $.ajax({
                    type: "POST", 
                    url: '/Platform/CityByCountry',
                    data: {
                       'cityId':checkedvalues,
                        'countryId':checkedcntryvalues

                    },
                    
                     success: function (data) {
                        console.log(data);
                        $("#zxc").empty();
                        
                        data.forEach(function (item) {
                        $("#zxc").append(`<a class="dropdown-item">
                        ${item.text} <input type="checkbox" ${item.selected ? "checked" : ""} value="${item.value}">
                        </a>`);
                        });
                        
                       temp();
                    },

                    error: function(e)
                    {
                        console.log("Bye");
                        alert('Error');
                    },
                });
              
           }

            // (1)   ----------------------------   filtering,sorting,searching mission  -------------------------------------------

            function temp()
            {               
                // city chechbox list
                var checkedvalues = [];
                var div = document.getElementById("zxc");
                var list = div.getElementsByTagName("input");
                for (i = 0; i < list.length; i++) {
                    if (list[i].checked) {
                        checkedvalues.push(list[i].value);
                    }
                }
                // country chechbox list
                var checkedcntryvalues = [];
                var div1 = document.getElementById("cntry");
                var list = div1.getElementsByTagName("input");
                for (i = 0; i < list.length; i++) {
                    if (list[i].checked) {
                        checkedcntryvalues.push(list[i].value);
                    }
                }
                // theme chechbox list
                var checkedthemevalues = [];
                var div2 = document.getElementById("theme");
                var list = div2.getElementsByTagName("input");
                for (i = 0; i < list.length; i++) {
                    if (list[i].checked) {
                        checkedthemevalues.push(list[i].value);
                    }
                }
                // skill chechbox list
                var checkedskillvalues = [];
                var div3 = document.getElementById("skill");
                var list = div3.getElementsByTagName("input");
                for (i = 0; i < list.length; i++) {
                    if (list[i].checked) {
                        checkedskillvalues.push(list[i].value);
                    }
                }              
                // searching string
                var search = document.getElementById("searchb").value;               
                // sorting element
                var sort = document.getElementById("sort").value;
               
                
                $.ajax({
                    type: "POST", 
                    url: '/Platform/Filter',
                    data: {

                        'CityIds': checkedvalues,
                        'CountryIds': checkedcntryvalues,
                        'ThemeIds': checkedthemevalues,
                        'SkillIds': checkedskillvalues,
                        'Search': search,
                        'SortBy': sort,
                        'PageSize': PageSize,
                        'PageNumber': PageNumber

                    },
                    dataType: "html", 
                     success: function (data) {
                        if($("#grid-view").hasClass("d-none")){
                            $("#grid-list").empty();
                            $("#grid-list").html(data);
                            $("#grid-view").addClass("d-none");
                            Pagination();
                        }
                        else{
                            $("#grid-list").empty();
                            $("#grid-list").html(data);
                            $("#list-view").addClass("d-none");
                            Pagination();
                        }
                    },

                    error: function(e)
                    {
                        console.log("Bye");
                        alert('Error');
                    },
                });
            }  
            
            // (2)   ------------------------   window resize function for grid-list view   -------------------------------------------

                window.addEventListener("resize", function () {
                var w = window.outerWidth;
                var grid = document.getElementById('grid-view');
                var list = document.getElementById('list-view');
                {
                    if (w < 768 && grid.classList.contains("d-none")) {
                        grid.classList.remove("d-none");
                        list.classList.add("d-none");
                    }
                }
            });
           
           
       </script>


    </body>

   